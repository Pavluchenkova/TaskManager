<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:viewmodel="clr-namespace:TasksManager.Application.ViewModel"
                    xmlns:Extenders="clr-namespace:TasksManager.Application.Utility"
                    xmlns:local="clr-namespace:TasksManager.Application">

    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ErrorToolTip" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ShowHideButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}" Value="true">
                <Setter Property="Visibility" Value="visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DoneButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}" Value="true">
                <Setter Property="Visibility" Value="visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=DataContext.Status}" Value="Done">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="validationFailed">

    </ControlTemplate>

    <DataTemplate x:Key="TaskDataTemplate">
        <Border BorderThickness="0">
            <DockPanel HorizontalAlignment="Stretch">
                <Label HorizontalAlignment="Left" Content="{Binding Title}" FontWeight="Bold" FontSize="16"></Label>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button HorizontalAlignment="Right" Style="{StaticResource DoneButton}" ToolTip="Done" Command="{Binding MakeDoneCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"                                
                                DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Mode=TwoWay}">
                        <materialDesign:PackIcon Kind="Check"  Height="24" Width="24" />
                    </Button>
                    <Button HorizontalAlignment="Right" Style="{StaticResource ShowHideButton}" ToolTip="Edit" Command="{Binding EditTaskCommand}" 
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}" 
                                DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" >
                        <materialDesign:PackIcon Kind="Pencil"  Height="24" Width="24" />
                    </Button>
                    <Button HorizontalAlignment="Right" Style="{StaticResource ShowHideButton}" ToolTip="Delete"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                                Command="{Binding DeleteTaskCommand}" DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}">
                        <materialDesign:PackIcon Kind="Delete"  Height="24" Width="24" />
                    </Button>
                </StackPanel>
            </DockPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="CreateTaskDataTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <TextBox  Grid.Row="0" Grid.Column = "1"                         
                          Name="TitleTextBox"
                          Margin="0 5 0 5" 
                          materialDesign:HintAssist.Hint="Title" 
                          Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                          Validation.ErrorTemplate="{StaticResource validationFailed}">
                <TextBox.Text>
                    <Binding Path="NewTask.Title"
                                 UpdateSourceTrigger="PropertyChanged"
                                 NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <Extenders:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <ComboBox Grid.Row="1" materialDesign:HintAssist.Hint="Status" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskStatuses}" SelectedItem="{Binding NewTask.Status}"                        
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
            <ComboBox Grid.Row="2" materialDesign:HintAssist.Hint="Priority" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskPriorities}" SelectedItem="{Binding NewTask.Priority}" 
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
            <ComboBox Grid.Row="3" materialDesign:HintAssist.Hint="Category" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskCategories}" SelectedItem="{Binding NewTask.Category}" 
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
            <TextBox  Grid.Row="4" Text="{Binding NewTask.Description, Mode=TwoWay}" materialDesign:HintAssist.Hint="Notes" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 0"></TextBox>
            <DockPanel Grid.Row="5" HorizontalAlignment="Right" >
                <Button 
                        Command="{Binding SaveTaskCommand}"
                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                        DockPanel.Dock="Right"                      
                        ToolTip="Save new"
                        Margin="5"
                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                        IsEnabled="{Binding ElementName=TitleTextBox, Path=Text.Length}">
                    <materialDesign:PackIcon Kind="Check"/>
                </Button>
                <Button 
                        Command="{Binding CancelCommand}"
                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                        DockPanel.Dock="Right"                        
                        ToolTip="Cancel" 
                        Margin="5"
                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                    <materialDesign:PackIcon Kind="WindowClose"/>
                </Button>

            </DockPanel>

        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="EditTaskDataTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <TextBox  Grid.Row="0" Grid.ColumnSpan ="3"
                          Name="TitleTextBox"
                          FontSize="16"
                          FontWeight="Bold"
                          TextAlignment="Left"
                          Margin="0 5 0 5" 
                          Style ="{StaticResource ErrorToolTip}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" 
                          Validation.ErrorTemplate="{StaticResource validationFailed}">
                <TextBox.Text>
                    <Binding Path="NewTask.Title"
                                 UpdateSourceTrigger="PropertyChanged"
                                 NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <Extenders:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <ComboBox Grid.Row="1" materialDesign:HintAssist.Hint="Status" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskStatuses}" SelectedItem="{Binding SelectedTask.Status}"                        
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
            <ComboBox Grid.Row="2" materialDesign:HintAssist.Hint="Priority" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskPriorities}" SelectedItem="{Binding SelectedTask.Priority}" 
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
            <ComboBox Grid.Row="3" materialDesign:HintAssist.Hint="Category" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskCategories}" SelectedItem="{Binding SelectedTask.Category}" 
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
            <TextBox  Grid.Row="4" Text="{Binding SelectedTask.Description, Mode=TwoWay}" materialDesign:HintAssist.Hint="Notes" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 0"></TextBox>

            <DockPanel Grid.Row="5" HorizontalAlignment="Right" >
                <Button 
                        Margin="5"
                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                        Command="{Binding SaveTaskCommand}"
                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                        DockPanel.Dock="Right"                      
                        ToolTip="Save new"                        
                        IsEnabled="{Binding ElementName=TitleTextBox, Path=Text.Length}">
                    <materialDesign:PackIcon Kind="Check"/>
                </Button>
                <Button 
                        Margin="5"
                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                        Command="{Binding CancelCommand}"
                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                        DockPanel.Dock="Right"                        
                        ToolTip="Cancel">
                    <materialDesign:PackIcon Kind="WindowClose"/>
                </Button>
            </DockPanel>
        </Grid>
    </DataTemplate>

</ResourceDictionary>