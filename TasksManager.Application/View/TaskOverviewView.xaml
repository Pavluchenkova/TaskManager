<Window x:Class="TasksManager.Application.View.TaskOverviewView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:viewmodel="clr-namespace:TasksManager.Application.ViewModel"
        xmlns:Extenders="clr-namespace:TasksManager.Application.Utility"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:TasksManager.Application.TemplateSelector"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        Title="TaskOverviewView" Height="600" Width="800"
        DataContext="{Binding Source={StaticResource mainViewModelLocator}, Path=TaskOverviewViewModel}">

    <Window.Resources>
        <local:TemplateSelector x:Key="TemplateSelector"/>

        <Style x:Key="ShowHideButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}" Value="true">
                    <Setter Property="Visibility" Value="visible"/>
                </DataTrigger>

                <!--DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=DataContext.IsModify}" Value="true">
                    <Setter Property="" Value="visible"/>
                </DataTrigger-->
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="TaskDataTemplate">
            <Border BorderThickness="0">
                <DockPanel HorizontalAlignment="Stretch">
                    <Label HorizontalAlignment="Left" Content="{Binding Title}" FontWeight="Bold" FontSize="16"></Label>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button HorizontalAlignment="Right" Style="{StaticResource ShowHideButton}" ToolTip="Done" Command="{Binding MakeDoneCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"                                
                                DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Mode=TwoWay}">
                            <materialDesign:PackIcon Kind="Check"  Height="24" Width="24" />
                        </Button>
                        <Button HorizontalAlignment="Right" Style="{StaticResource ShowHideButton}" ToolTip="Edit" Command="{Binding EditTaskCommand}" 
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}" 
                                DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" >
                            <materialDesign:PackIcon Kind="Pencil"  Height="24" Width="24" />
                        </Button>
                        <Button HorizontalAlignment="Right" Style="{StaticResource ShowHideButton}" ToolTip="Delete"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                                Command="{Binding DeleteTaskCommand}" DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}">
                            <materialDesign:PackIcon Kind="Delete"  Height="24" Width="24" />
                        </Button>
                    </StackPanel>
                </DockPanel>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="CreateTaskDataTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="50"></RowDefinition>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" VerticalContentAlignment="Bottom"  Content="Title" Grid.ColumnSpan="2"></Label>
                <Label Grid.Row="1" VerticalContentAlignment="Bottom"  Content="Status" Grid.ColumnSpan="2"></Label>
                <Label Grid.Row="2" VerticalContentAlignment="Bottom"  Content="Priority" Grid.ColumnSpan="2"></Label>
                <Label Grid.Row="3" VerticalContentAlignment="Bottom"  Content="Category" Grid.ColumnSpan="2"></Label>
                <Label Grid.Row="4" VerticalContentAlignment="Bottom"  Content="Notes" Grid.ColumnSpan="2"></Label>

                <TextBox  Grid.Row="0" Grid.Column = "2" Text="{Binding NewTask.Title, Mode=TwoWay}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"></TextBox>
                <ComboBox Grid.Row="1" Grid.Column = "2" ItemsSource="{Binding TaskStatuses}" SelectedItem="{Binding NewTask.Status}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                          materialDesign:HintAssist.Hint="Select status" Height="28" Margin="0,1"/>
                <ComboBox Grid.Row="2" Grid.Column = "2" ItemsSource="{Binding TaskPriorities}" SelectedItem="{Binding NewTask.Priority}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                          materialDesign:HintAssist.Hint="Select priority" Height="28" Margin="0,1"></ComboBox>
                <ComboBox Grid.Row="3" Grid.Column = "2" ItemsSource="{Binding TaskCategories}" SelectedItem="{Binding NewTask.Category}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                          materialDesign:HintAssist.Hint="Select category" Height="28" Margin="0,1"></ComboBox>
                <TextBox  Grid.Row="4" Grid.Column = "2" Text="{Binding NewTask.Description, Mode=TwoWay}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"></TextBox>
                <Button Grid.Row="5" Grid.Column="2"
                        Command="{Binding SaveNewTaskCommand}"
                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                        HorizontalAlignment="Right"
                        Margin="5"
                        ToolTip="Save new"
                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Height="Auto">
                    <materialDesign:PackIcon Kind="Check"/>
                </Button>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="EditTaskDataTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="50"></RowDefinition>
                </Grid.RowDefinitions>

                <Label Grid.Row="1" VerticalContentAlignment="Bottom"  Content="Status" Grid.ColumnSpan="2"></Label>
                <Label Grid.Row="2" VerticalContentAlignment="Bottom"  Content="Priority" Grid.ColumnSpan="2"></Label>
                <Label Grid.Row="3" VerticalContentAlignment="Bottom"  Content="Category" Grid.ColumnSpan="2"></Label>
                <Label Grid.Row="4" VerticalContentAlignment="Bottom"  Content="Notes" Grid.ColumnSpan="2"></Label>

                <TextBox  Grid.Row="0" Grid.ColumnSpan ="3" Text="{Binding SelectedTask.Title, Mode=TwoWay}" FontSize="16" FontWeight="Bold" TextAlignment="Left"                          
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"></TextBox>
                <ComboBox Grid.Row="1" Grid.Column = "2" ItemsSource="{Binding TaskStatuses}" SelectedItem="{Binding SelectedTask.Status}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                          materialDesign:HintAssist.Hint="Select status" Height="28" Margin="0,1"/>
                <ComboBox Grid.Row="2" Grid.Column = "2" ItemsSource="{Binding TaskPriorities}" SelectedItem="{Binding SelectedTask.Priority}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                          materialDesign:HintAssist.Hint="Select priority" Height="28" Margin="0,1"></ComboBox>
                <ComboBox Grid.Row="3" Grid.Column = "2" ItemsSource="{Binding TaskCategories}" SelectedItem="{Binding SelectedTask.Category}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                          materialDesign:HintAssist.Hint="Select category" Height="28" Margin="0,1"></ComboBox>
                <TextBox  Grid.Row="4" Grid.Column = "2" Text="{Binding SelectedTask.Description, Mode=TwoWay}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"></TextBox>
                <Button Grid.Row="5" Grid.Column="2"
                        Command="{Binding SaveTaskCommand}"
                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                        HorizontalAlignment="Right"
                        Margin="5"
                        ToolTip="Save Changes"
                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Height="Auto">
                    <materialDesign:PackIcon Kind="Check"/>
                </Button>
            </Grid>
        </DataTemplate>
    </Window.Resources>

    <DockPanel>
        <materialDesign:ColorZone Padding="16"
                                  Margin="0"
                                  materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                  Mode="PrimaryMid"
                                  DockPanel.Dock="Top">
            <DockPanel>
                <ToggleButton DockPanel.Dock="Left" Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20">Task Manager</TextBlock>
            </DockPanel>
        </materialDesign:ColorZone>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="26"></RowDefinition>
                <RowDefinition/>
                <RowDefinition Height="155"/>
            </Grid.RowDefinitions>
            <materialDesign:ColorZone Grid.Column="0" Grid.Row="0" Margin="0" materialDesign:ShadowAssist.ShadowDepth="Depth1" Mode="PrimaryLight" Height="19">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16">In Progress:</TextBlock>
            </materialDesign:ColorZone>
            <ListView Grid.Column="0" 
                      Grid.Row ="1"
                      Margin="0"
                      Name="TaskListView"
                      HorizontalContentAlignment="Stretch"
                      ItemsSource="{Binding Tasks}"                      
                      SelectedItem="{Binding SelectedTask}"
                      IsSynchronizedWithCurrentItem="True"
                      Extenders:ListViewExtenders.AutoScrollToCurrentItem ="True">
                <!--<ListView.ItemTemplateSelector>
                    <local:TemplateSelector
                          EditTaskDataTemplate = "{StaticResource EditTaskDataTemplate}"
                          CreateTaskDataTemplate ="{StaticResource CreateTaskDataTemplate}"
                          TaskDataTemplate = "{StaticResource TaskDataTemplate}"/>
                </ListView.ItemTemplateSelector>-->

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding}">
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Setter Property="ContentTemplate" Value="{StaticResource TaskDataTemplate}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsModify}"  Value="true">
                                            <Setter Property="ContentTemplate" Value="{StaticResource EditTaskDataTemplate}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsNew}"  Value="true">
                                            <Setter Property="ContentTemplate" Value="{StaticResource CreateTaskDataTemplate}"/>
                                        </DataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ListView>

            <StackPanel Grid.Row="2" Margin="0,4,0,3">
                <Button Style="{StaticResource MaterialDesignFloatingActionButton}"   
                        Margin="5"
                        HorizontalAlignment="Right" 
                        ToolTip="Add task"
                        Command="{Binding AddTaskCommand}">
                    <materialDesign:PackIcon Kind="Plus"  Height="24" Width="24" />
                </Button>
            </StackPanel>
            <materialDesign:ColorZone Grid.Column="1" Grid.Row="0" Margin="0" materialDesign:ShadowAssist.ShadowDepth="Depth2" Mode="PrimaryLight" Height="19">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16">In Progress</TextBlock>
            </materialDesign:ColorZone>
            <ListView Grid.Column="1"
                      Grid.Row="1"
                      Grid.RowSpan="2"
                      Margin="0"
                      ItemsSource="{Binding TasksInProcess}"
                      Name="TaskInProgressListView"
                      HorizontalContentAlignment="Stretch"
                      SelectedItem="{Binding SelectedTask}">
                <ListView.ItemTemplateSelector>
                    <local:TemplateSelector
                          EditTaskDataTemplate = "{StaticResource EditTaskDataTemplate}"
                          TaskDataTemplate = "{StaticResource TaskDataTemplate}"/>
                </ListView.ItemTemplateSelector>
            </ListView>
        </Grid>
    </DockPanel>
</Window>
