<Window x:Class="TasksManager.Application.View.TaskOverviewView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:viewmodel="clr-namespace:TasksManager.Application.ViewModel"
        xmlns:Extenders="clr-namespace:TasksManager.Application.Utility"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        Height="600" Width="400"       
        MinHeight="400" MinWidth="400"
        BorderThickness="0"
        ResizeMode="CanResizeWithGrip"
        WindowStyle="ThreeDBorderWindow"        
        WindowStartupLocation="CenterScreen"
        Title="Task Manager"
        DataContext="{Binding Source={StaticResource mainViewModelLocator}, Path=TaskOverviewViewModel}">

    <Window.Resources>
        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ErrorToolTip" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ShowHideButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}" Value="true">
                    <Setter Property="Visibility" Value="visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DoneButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}" Value="true">
                    <Setter Property="Visibility" Value="visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=DataContext.Status}" Value="Done">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="validationFailed">
            
        </ControlTemplate>

        <DataTemplate x:Key="TaskDataTemplate">
            <Border BorderThickness="0">
                <DockPanel HorizontalAlignment="Stretch">
                    <Label HorizontalAlignment="Left" Content="{Binding Title}" FontWeight="Bold" FontSize="16"></Label>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button HorizontalAlignment="Right" Style="{StaticResource DoneButton}" ToolTip="Done" Command="{Binding MakeDoneCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"                                
                                DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Mode=TwoWay}">
                            <materialDesign:PackIcon Kind="Check"  Height="24" Width="24" />
                        </Button>
                        <Button HorizontalAlignment="Right" Style="{StaticResource ShowHideButton}" ToolTip="Edit" Command="{Binding EditTaskCommand}" 
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}" 
                                DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" >
                            <materialDesign:PackIcon Kind="Pencil"  Height="24" Width="24" />
                        </Button>
                        <Button HorizontalAlignment="Right" Style="{StaticResource ShowHideButton}" ToolTip="Delete"
                                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                                Command="{Binding DeleteTaskCommand}" DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}">
                            <materialDesign:PackIcon Kind="Delete"  Height="24" Width="24" />
                        </Button>
                    </StackPanel>
                </DockPanel>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="CreateTaskDataTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>

                <TextBox  Grid.Row="0" Grid.Column = "1"                         
                          Name="TitleTextBox"
                          Margin="0 5 0 5" 
                          materialDesign:HintAssist.Hint="Title" 
                          Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                          Validation.ErrorTemplate="{StaticResource validationFailed}">
                    <TextBox.Text>
                        <Binding Path="NewTask.Title"
                                 UpdateSourceTrigger="PropertyChanged"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <Extenders:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <ComboBox Grid.Row="1" materialDesign:HintAssist.Hint="Status" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskStatuses}" SelectedItem="{Binding NewTask.Status}"                        
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
                <ComboBox Grid.Row="2" materialDesign:HintAssist.Hint="Priority" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskPriorities}" SelectedItem="{Binding NewTask.Priority}" 
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
                <ComboBox Grid.Row="3" materialDesign:HintAssist.Hint="Category" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskCategories}" SelectedItem="{Binding NewTask.Category}" 
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
                <TextBox  Grid.Row="4" Text="{Binding NewTask.Description, Mode=TwoWay}" materialDesign:HintAssist.Hint="Notes" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 0"></TextBox>
                <DockPanel Grid.Row="5" HorizontalAlignment="Right" >
                    <Button 
                        Command="{Binding SaveTaskCommand}"
                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                        DockPanel.Dock="Right"                      
                        ToolTip="Save new"
                        Margin="5"
                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                        IsEnabled="{Binding ElementName=TitleTextBox, Path=Text.Length}">
                        <materialDesign:PackIcon Kind="Check"/>
                    </Button>
                    <Button 
                        Command="{Binding CancelCommand}"
                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                        DockPanel.Dock="Right"                        
                        ToolTip="Cancel" 
                        Margin="5"
                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                        <materialDesign:PackIcon Kind="WindowClose"/>
                    </Button>

                </DockPanel>

            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="EditTaskDataTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>

                <TextBox  Grid.Row="0" Grid.ColumnSpan ="3"
                          Name="TitleTextBox"
                          FontSize="16"
                          FontWeight="Bold"
                          TextAlignment="Left"
                          Margin="0 5 0 5" 
                          Style ="{StaticResource ErrorToolTip}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" 
                          Validation.ErrorTemplate="{StaticResource validationFailed}">
                    <TextBox.Text>
                        <Binding Path="SelectedTask.Title"                                
                                 UpdateSourceTrigger="PropertyChanged"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <Extenders:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <ComboBox Grid.Row="1" materialDesign:HintAssist.Hint="Status" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskStatuses}" SelectedItem="{Binding SelectedTask.Status}"                        
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
                <ComboBox Grid.Row="2" materialDesign:HintAssist.Hint="Priority" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskPriorities}" SelectedItem="{Binding SelectedTask.Priority}" 
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
                <ComboBox Grid.Row="3" materialDesign:HintAssist.Hint="Category" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TaskCategories}" SelectedItem="{Binding SelectedTask.Category}" 
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 5" />
                <TextBox  Grid.Row="4" Text="{Binding SelectedTask.Description, Mode=TwoWay}" materialDesign:HintAssist.Hint="Notes" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                          DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}" Margin="0 5 0 0"></TextBox>

                <DockPanel Grid.Row="5" HorizontalAlignment="Right" >
                    <Button 
                        Margin="5"
                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}" 
                        Command="{Binding SaveTaskCommand}"
                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                        DockPanel.Dock="Right"                      
                        ToolTip="Save new"                        
                        IsEnabled="{Binding ElementName=TitleTextBox, Path=Text.Length}">
                        <materialDesign:PackIcon Kind="Check"/>
                    </Button>
                    <Button 
                        Margin="5"
                        Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                        Command="{Binding CancelCommand}"
                        DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}}, Path=DataContext}"
                        DockPanel.Dock="Right"                        
                        ToolTip="Cancel">
                        <materialDesign:PackIcon Kind="WindowClose"/>
                    </Button>
                </DockPanel>
            </Grid>
        </DataTemplate>
    </Window.Resources>

    <DockPanel>
        <materialDesign:ColorZone Padding="16"
                                  Margin="0"
                                  materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                  Mode="PrimaryMid"
                                  DockPanel.Dock="Top">
            <DockPanel>
                <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                    <StackPanel>
                        <Button Content="ToDo" Command="{Binding ChooseToDoListCommand}"/>
                        <Button Content="InProcess" Command="{Binding ChooseInProgressListCommand}"/>
                        <Button Content="Done" Command="{Binding ChooseDoneListCommand}"/>
                    </StackPanel>
                </materialDesign:PopupBox>
                <TextBlock HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           FontSize="20"
                           Text="{Binding FilterName}"/>
            </DockPanel>
        </materialDesign:ColorZone>
        
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="80"/>
            </Grid.RowDefinitions>
            <ListView x:Name="taskList"
                      Grid.Column="0"
                      Grid.Row="0"                                       
                      HorizontalContentAlignment="Stretch"                      
                      ItemsSource="{Binding Tasks}"                      
                      SelectedItem="{Binding SelectedTask}"
                      ItemContainerStyle="{StaticResource ListViewItemStyle}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding}">
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Setter Property="ContentTemplate" Value="{StaticResource TaskDataTemplate}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsModify}"  Value="true">
                                            <Setter Property="ContentTemplate" Value="{StaticResource EditTaskDataTemplate}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsNew}"  Value="true">
                                            <Setter Property="ContentTemplate" Value="{StaticResource CreateTaskDataTemplate}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ListView>
            <StackPanel x:Name="addTaskPanel"
                Grid.Row="2"
                Grid.Column="0">
                <Button Style="{StaticResource MaterialDesignFloatingActionButton}"   
                        Margin="5"                        
                        HorizontalAlignment="Right" 
                        ToolTip="Add task"
                        Command="{Binding AddTaskCommand}" >
                    <materialDesign:PackIcon Kind="Plus"  Height="24" Width="24" />
                </Button>
            </StackPanel>
        </Grid>
    </DockPanel>
</Window>
